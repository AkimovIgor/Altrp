{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/modules/BaseModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/ElementsFactory.js","webpack:///./resources/modules/editor/src/js/classes/Resource.js","webpack:///./resources/modules/editor/src/js/classes/modules/SaveImportModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/SettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateSettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateDataStorage.js","webpack:///./resources/modules/editor/src/js/classes/Modules.js","webpack:///./resources/modules/editor/src/js/components/WidgetIcon.js","webpack:///./resources/modules/editor/src/js/components/WidgetsPanel.js","webpack:///./resources/modules/editor/src/svgs/style.svg","webpack:///./resources/modules/editor/src/svgs/chevron.svg","webpack:///./resources/modules/editor/src/js/components/SettingSection.js","webpack:///./resources/modules/editor/src/js/components/PanelTabContent.js","webpack:///./resources/modules/editor/src/js/components/SettingsPanel.js","webpack:///./resources/modules/editor/src/js/components/EditorWindow.js","webpack:///./resources/modules/editor/src/js/components/UpdateButton.js","webpack:///./resources/modules/editor/src/js/components/HistoryPanel.js","webpack:///./resources/modules/editor/src/js/classes/modules/AssetsBrowser.js","webpack:///./resources/modules/editor/src/Editor.js","webpack:///./resources/modules/editor/src/svgs/desktop.svg","webpack:///./resources/modules/editor/src/svgs/logo.svg","webpack:///./resources/modules/editor/src/svgs/navigation.svg","webpack:///./resources/modules/editor/src/svgs/preview.svg","webpack:///./resources/modules/editor/src/svgs/dots.svg","webpack:///./resources/modules/editor/src/svgs/hamburger.svg"],"names":["BaseModule","modules","this","ElementsFactory","object","parent","children","element","window","elementsManager","getElementClass","name","length","child","push","parseData","id","settings","target","newElement","_duplicateElement","insertNewChildAfter","getId","templateDataStorage","getEditor","elementsIds","_","union","getIds","getName","newChildren","map","childrenItem","newChild","setParent","component","setChildren","cloneDeep","Resource","data","route","url","fetch","method","headers","then","res","ok","Promise","reject","text","status","json","_token","options","body","JSON","stringify","files","fileType","String","Math","random","slice","formData","FormData","console","log","i","size","type","indexOf","append","SaveImportModule","resource","template_id","getTemplateId","store","dispatch","changeTemplateStatus","CONSTANTS","TEMPLATE_SAVING","get","templateData","parse","parsedData","elementsFactory","replaceAll","setTitle","title","setName","endLoading","TEMPLATE_UPDATED","err","error","getTemplateDataForSave","put","SettingsChangeModule","TemplateSettingsChangeModule","TemplateDataStorage","RootElement","rootElement","setCurrentRootElement","toObject","getTemplateData","currentElement","setCurrentElement","BaseElement","elementName","newSection","Section","newColumn","Column","newWidget","appendWidget","appendColumn","appendNewSection","TEMPLATE_NEED_UPDATE","showSettingsPanel","Modules","editor","saveImportModule","settingsChangeModule","templateSettingsChangeModule","load","WidgetIcon","props","state","onDragStart","bind","e","startDrag","dataTransfer","effectAllowed","setData","className","draggable","React","createElement","getIconComponent","height","getTitle","Component","WidgetsPanel","widgets","getWidgetsList","widget","key","styles","width","fill","xmlns","d","stroke","strokeWidth","SettingSection","open","toggle","setState","controllers","controls","sectionClasses","onClick","label","controller","ControllerComponent","controllersManager","getController","controlId","Controller","PanelTabContent","sections","autoHide","autoHideTimeout","autoHideDuration","section","idx","sectionId","SettingsPanel","activeTab","getControls","contentTabClasses","TAB_CONTENT","styleTabClasses","TAB_STYLE","advancedTabClasses","TAB_ADVANCED","setActiveTab","connect","EditorWindow","src","UpdateButton","saveTemplate","buttonClasses","templateStatus","AssetsBrowser","tabClick","toggleBrowser","selectAsset","chooseAsset","tabs","assets","getAssets","selectedAsset","mediaAssets","mediaResource","getAll","tab","iconsManager","getIconsList","currentTarget","dataset","assetname","assetsToggle","asset","forEach","item","onChoose","classes","active","tabClasses","data-tab","AssetContent","assetProps","iconComponent","filename","assetType","data-assetname","_export","assetsManagerSettings","altrpEditor","activePanel","openPageSettings","showWidgetsPanel","onDragEnd","subscribe","getState","loaded","draggableElement","elementDrag","stopDrag","initModules","settingsActive","templateClasses","getType","viewBox"],"mappings":"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","file":"4.editor.js","sourcesContent":["\n/**\n * @property {Modules} modules\n * */\nclass BaseModule {\n  /**\n   * @param {Modules} modules\n   * */\n  constructor(modules) {\n    this.modules = modules;\n  }\n}\n\nexport default BaseModule;","import BaseModule from './BaseModule';\nimport {getEditor} from \"../../helpers\";\n\nclass ElementsFactory extends BaseModule{\n  parseData(object, parent){\n    let children = [];\n    const elementsManager = window.elementsManager;\n    /**\n     * @member {BaseElement} element\n     * */\n    let element = new (elementsManager.getElementClass(object.name));\n    if( object.children && object.children.length ){\n      for( let child of object.children){\n        children.push( this.parseData(child, element) );\n      }\n    }\n    element.id = object.id;\n    element.children = children;\n    /**\n     * Если настройки пустый то с сервера приходит пустой массив -- меняем на пустой объект\n     * */\n    element.settings = (object.settings.length === 0) ? {} : object.settings;\n\n    if(parent){\n      element.parent = parent;\n    }\n    return element;\n  }\n\n  /**\n   * @param {BaseElement} element\n   * @param {BaseElement} target\n   * @return{BaseElement}\n   * */\n  duplicateElement(element, target){\n\n    let newElement = this._duplicateElement(element);\n    target.insertNewChildAfter(element.getId(), newElement);\n    /**\n     * @member {TemplateDataStorage} templateDataStorage\n     * */\n    let templateDataStorage = getEditor().modules.templateDataStorage;\n    templateDataStorage.elementsIds = _.union(templateDataStorage.elementsIds, newElement.getIds());\n    return newElement;\n  }\n  /**\n   * @param {BaseElement} element\n   * */\n  _duplicateElement(element){\n    /**\n     * @member {BaseElement} newElement\n     * */\n    let newElement = new (elementsManager.getElementClass(element.getName()));\n    let newChildren = [];\n    element.children.map((childrenItem)=>{\n      let newChild = this._duplicateElement(childrenItem);\n      newChild.setParent(newElement);\n      newChildren.push(newChild);\n    });\n    newElement.component = new\n    newElement.setChildren(newChildren);\n    newElement.settings = _.cloneDeep(element.settings);\n    newElement.children = newChildren;\n    return newElement;\n  }\n}\n\nexport default ElementsFactory;","/**\n * @class\n * */\n\nexport const MAX_FILE_SIZE = 10485760;\nclass Resource {\n\n\n  /**\n   * @member {Object} routes\n   * @member {string} routes.get\n   * @member {string} routes.post\n   * @member {string} routes.create\n   * @member {string} routes.getAll\n   */\n  constructor(data){\n\n    this.route = data.route;\n    if(! this.route){\n      throw 'Нужен route';\n    }\n\n  }\n  /**\n   * @return {Promise}\n   * */\n  get(id){\n    if(! id){\n      throw 'Get only by \"id\"';\n    }\n\n    let options = {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    };\n\n    let url = this.route + '/' + id;\n    return fetch(url, options).then(res => {\n      if(res.ok === false){\n        return Promise.reject(res.text(), res.status);\n      }\n      return res.json()\n    });\n  }\n  /**\n   * @return {Promise}\n   * */\n  getAll(){\n\n    let options = {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    };\n\n    let url = this.route;\n    return fetch(url, options).then(res => {\n      if(res.ok === false){\n        return Promise.reject(res.text(), res.status);\n      }\n      return res.json()\n    });\n  }\n\n  /**\n   * @param {any} data\n   * @param {object | null} headers\n   * @return {Promise}\n   * */\n  post(data = {}, headers){\n    data._token = _token;\n    headers = headers || {\n      'Content-Type': 'application/json'\n    };\n    let options = {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers,\n    };\n    return fetch(this.route, options).then(res => {\n      if(res.ok === false){\n        return Promise.reject(res.text(), res.status);\n      }\n      return res.json()\n    });\n  }\n  /**\n   * @param {FileList} files\n   * @param {string} fileType\n   * @return {Promise}\n   * */\n  postFiles(files, fileType){\n    // data._token = _token;\n    let boundary = String(Math.random()).slice(2);\n    fileType = fileType || 'image';\n    let headers = {\n      'X-CSRF-TOKEN': _token,\n      // 'Content-Type': 'multipart/form-data; boundary=' + boundary\n    };\n    let formData = new FormData();\n    console.log(files);\n    for (let i = 0; i < files.length; i++) {\n      if(files[i].size > MAX_FILE_SIZE || files[i].type.indexOf(fileType) !== 0){\n        console.log(files[i]);\n        continue;\n      }\n      formData.append(`files[${i}]`, files[i]);\n    }\n    let options = {\n      method: 'POST',\n      body: formData,\n      headers,\n    };\n    return fetch(this.route, options).then(res => {\n      if(res.ok === false){\n        return Promise.reject(res.text(), res.status);\n      }\n      return res.json()\n    });\n  }\n\n  /**\n   * @return {Promise}\n   * */\n  put(id, data){\n    data._token = _token;\n    let options = {\n      method: 'put',\n      body: JSON.stringify(data),\n      headers: {\n        'X-CSRF-TOKEN': _token,\n        'Content-Type': 'application/json'\n      },\n    };\n    let url = this.route + '/' + id;\n    return fetch(url, options).then(res => {\n      if(res.ok === false){\n        return Promise.reject(res.text(), res.status);\n      }\n      return res.json()\n    });\n  }\n  /**\n   * @return {Promise}\n   * */\n  delete(id){\n\n    let options = {\n      method: 'delete',\n      headers: {\n        'X-CSRF-TOKEN': _token,\n        'Content-Type': 'application/json'\n      },\n    };\n    let url = this.route + '/' + id;\n    return fetch(url, options).then(res => {\n      if(res.ok === false){\n        return Promise.reject(res.text(), res.status);\n      }\n      return res.json()\n    });\n  }\n  /**\n   * @return {Promise}\n   * */\n  getOptions(){\n\n    let options = {\n      method: 'get',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    };\n    let url = this.route + '/options';\n    return fetch(url, options).then(res => {\n      if(res.ok === false){\n        return Promise.reject(res.text(), res.status);\n      }\n      return res.json()\n    });\n  }\n\n}\n\nexport default Resource;","import BaseModule from \"./BaseModule\";\nimport Resource from \"../Resource\";\nimport {CONSTANTS, getEditor, getTemplateId} from \"../../helpers\";\nimport RootElement from \"../elements/RootElement\";\nimport store from \"../../store/store\";\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\n\nclass SaveImportModule extends BaseModule{\n\n  constructor(modules){\n    super(modules);\n\n    this.resource = new Resource({\n      route: '/admin/ajax/templates',\n    });\n  }\n\n  load(){\n    this.template_id = getTemplateId();\n    // console.log(this.template_id);\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_SAVING));\n    if(this.template_id){\n      let res = this.resource.get(this.template_id).then(templateData => {\n        let data = JSON.parse(templateData.data);\n        let parsedData = this.modules.elementsFactory.parseData(data);\n        let templateDataStorage = getEditor().modules.templateDataStorage;\n        templateDataStorage.replaceAll(parsedData);\n        templateDataStorage.setTitle(templateData.title);\n        templateDataStorage.setName(templateData.name);\n        getEditor().endLoading();\n        store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\n      }).catch(err=>{\n        console.error(err);\n        store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\n      });\n    } else {\n\n    }\n  }\n\n  saveTemplate(){\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_SAVING));\n    let templateData = getEditor().modules.templateDataStorage.getTemplateDataForSave();\n    this.resource.put(this.template_id, templateData).then(res=>{\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\n    }).catch(err=>{\n      console.error(err);\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_UPDATED));\n    });\n  }\n\n}\n\nexport default SaveImportModule;","class SettingsChangeModule {\n\n}\nexport default SettingsChangeModule;","class TemplateSettingsChangeModule {\n\n}\nexport default TemplateSettingsChangeModule;","import RootElement from \"../elements/RootElement\";\nimport {CONSTANTS, getEditor, getTemplateId} from \"../../helpers\";\nimport BaseModule from \"./BaseModule\";\nimport store from '../../store/store';\nimport {setCurrentElement, SET_CURRENT_ELEMENT} from '../../store/current-element/actions'\nimport BaseElement from \"../elements/BaseElement\";\nimport Section from \"../elements/Section\";\nimport Column from \"../elements/Column\";\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\n\nclass TemplateDataStorage extends BaseModule{\n\n  constructor(modules){\n    super(modules);\n    this.elementsIds = [];\n  }\n\n  replaceAll(element) {\n    if(! element instanceof RootElement ){\n      throw 'Expect Root Element as root element;)';\n    }\n    this.rootElement = element;\n    this.elementsIds = element.getIds();\n    this.setCurrentRootElement();\n  }\n\n  getTemplateData() {\n    return this.rootElement.toObject();\n  }\n  getTemplateDataForSave(){\n    let data = {};\n\n    data.data = this.getTemplateData();\n    data.title = this.title || 'testtitle';\n    data.name = this.name || 'testname';\n    console.log(this);\n    return data;\n  }\n\n  setTitle(title){\n    this.title = title;\n  }\n\n\n  setName(name){\n    this.name = name;\n  }\n\n  setCurrentRootElement(){\n    this.currentElement = this.rootElement;\n    store.dispatch(setCurrentElement(this.currentElement));\n    return this.currentElement;\n  }\n\n  setCurrentElement(element){\n    if(! element instanceof BaseElement){\n      throw 'Only Base Element Can Be Set as Default'\n    }\n    this.currentElement = element;\n    store.dispatch(setCurrentElement(element));\n  }\n\n  getCurrentElement(){\n    if(!this.currentElement){\n      return this.setCurrentRootElement();\n    }\n    return this.currentElement;\n  }\n\n  getRootElement(){\n    return this.rootElement\n  }\n\n  addWidgetInSection(elementName){\n    let newSection = new Section();\n    this.elementsIds.push(newSection.getId());\n\n    let newColumn = new Column();\n    this.elementsIds.push(newColumn.getId());\n\n    let newWidget = new (window.elementsManager.getElementClass(elementName));\n    this.elementsIds.push(newWidget.getId());\n\n    newColumn.appendWidget(newWidget);\n    newSection.appendColumn(newColumn);\n    this.rootElement.appendNewSection(newSection);\n    this.setCurrentElement(newWidget);\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\n    getEditor().showSettingsPanel();\n  }\n\n}\n\nexport default TemplateDataStorage;","import ElementsFactory from './modules/ElementsFactory';\nimport SaveImportModule from \"./modules/SaveImportModule\";\nimport SettingsChangeModule from \"./modules/SettingsChangeModule\";\nimport TemplateSettingsChangeModule from \"./modules/TemplateSettingsChangeModule\";\nimport TemplateDataStorage from \"./modules/TemplateDataStorage\";\n\nclass Modules {\n  /**\n   * @param {Editor} editor\n   * */\n  constructor(editor){\n    this.elementsFactory = new ElementsFactory(this);\n    this.saveImportModule = new SaveImportModule(this);\n    this.settingsChangeModule = new SettingsChangeModule(this);\n    this.templateSettingsChangeModule = new  TemplateSettingsChangeModule(this);\n    this.templateDataStorage = new TemplateDataStorage(this);\n  }\n  loaded(){\n    this.saveImportModule.load();\n  }\n}\nexport default Modules;","import React, {Component} from \"react\";\nimport BaseElement from \"../classes/elements/BaseElement\";\nimport store from '../store/store'\nimport {startDrag} from \"../store/element-drag/actions\";\n\nexport default class WidgetIcon  extends  Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      element: this.props.element,\n    };\n    this.onDragStart = this.onDragStart.bind(this);\n  }\n  onDragStart(e){\n    store.dispatch(startDrag(null));\n    e.dataTransfer.effectAllowed = \"copy\";\n    e.dataTransfer.setData('text/plain', this.state.element.getName());\n  }\n  render() {\n    if (!this.state.element instanceof BaseElement) {\n      throw 'Widget Component must has Element in props';\n    }\n    return <div className='widget-icon' draggable=\"true\" onDragStart={this.onDragStart}>\n      {\n        React.createElement(this.state.element.getIconComponent(), {height: 35})\n      }\n      <div className=\"widget-icon__title\">\n        {this.state.element.getTitle()}\n      </div>\n    </div>\n  }\n}\n\n","import React, {Component} from \"react\";\nimport WidgetIcon from \"./WidgetIcon\";\n\n\nclass WidgetsPanel extends Component {\n  constructor(props){\n    super(props);\n    this.state = {widgets: window.elementsManager.getWidgetsList()};\n  }\n  render() {\n    return <div className=\"widget-panel\">\n      {\n        this.state.widgets.map(widget => {\n          return <WidgetIcon element={widget} key={widget.getName()}/>;\n        })\n      }\n    </div>\n  }\n}\n\nexport default WidgetsPanel","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"20\" height=\"19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M5.6 15.883c0-1.136-.835-2.08-1.929-2.276V1.317A.419.419 0 003.25.9a.419.419 0 00-.421.417v12.29C1.735 13.803.9 14.747.9 15.883c0 1.279 1.055 2.317 2.35 2.317 1.295 0 2.35-1.038 2.35-2.317zm-2.35 1.484a1.497 1.497 0 01-1.507-1.484c0-.816.675-1.483 1.507-1.483.832 0 1.507.667 1.507 1.483 0 .817-.675 1.484-1.507 1.484zM11.9 9.484a2.376 2.376 0 00-1.873-2.33V1.317A.414.414 0 009.615.9a.414.414 0 00-.413.417v5.812A2.375 2.375 0 007.2 9.484c0 1.193.87 2.185 2.002 2.356v5.943c0 .23.184.417.413.417a.414.414 0 00.412-.417v-5.968a2.376 2.376 0 001.873-2.33zm-2.35 1.55a1.54 1.54 0 01-1.526-1.55A1.54 1.54 0 019.55 7.936c.84 0 1.526.693 1.526 1.548a1.54 1.54 0 01-1.526 1.55zM19.1 3.217C19.1 1.938 18.044.9 16.75.9S14.4 1.938 14.4 3.217c0 1.136.835 2.08 1.929 2.276v12.29c0 .232.19.417.421.417a.419.419 0 00.421-.417V5.493c1.094-.196 1.929-1.14 1.929-2.276zM16.75 4.7a1.497 1.497 0 01-1.507-1.483c0-.817.675-1.484 1.507-1.484.832 0 1.507.667 1.507 1.484 0 .816-.675 1.483-1.507 1.483z\" fill=\"#343B4C\" stroke=\"#343B4C\" strokeWidth=\".2\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"10\" height=\"7\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M1 6l3.5-4 4 4\" stroke=\"#343B4C\" strokeWidth=\"1.5\" /></svg>);","import React, {Component} from \"react\";\nimport ChevronIcon from '../../svgs/chevron.svg'\nimport Controller from \"../classes/Controller\";\n\nclass SettingSection extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      open: props.open,\n    };\n    this.toggle = this.toggle.bind(this);\n  }\n  toggle(){\n    this.setState({\n      open: !this.state.open\n    });\n  }\n  render() {\n    let controllers = this.props.controls || [];\n    let sectionClasses = 'settings-section ' + (this.state.open ? 'open' : '');\n    return <div className={sectionClasses}>\n      <div className=\"settings-section__title d-flex \" onClick={this.toggle}>\n        <div className=\"settings-section__icon d-flex \">\n          <ChevronIcon/>\n        </div>\n        <div className=\"settings-section__label\">\n          {this.props.label}\n        </div>\n      </div>\n      <div className=\"controllers-wrapper\">\n        {\n          controllers.map((controller) => {\n                let ControllerComponent = window.controllersManager.getController(controller.type);\n                return React.createElement(ControllerComponent, {...controller, key: controller.controlId, controller: new Controller(controller)});\n              }\n          )\n        }\n      </div>\n    </div>\n  }\n}\n\nexport default SettingSection;","import React, {Component} from \"react\";\nimport SettingSection from \"./SettingSection\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\n\nclass PanelTabContent extends Component {\n    render(){\n      let sections =  this.props.sections || [];\n      return <div className=\"settings-controllers\">\n        <Scrollbars\n        autoHide\n        autoHideTimeout={500}\n        autoHideDuration={200}\n        > \n          {\n            sections.map((section, idx) =>{\n              return React.createElement(SettingSection, {\n                ...section,\n                key: section.sectionId,\n                open: idx === 0,\n              });\n                }\n            )\n          }\n        </Scrollbars>\n      </div>\n    }\n}\n\nexport default PanelTabContent","import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\nimport ContentIcon from '../../svgs/content.svg'\nimport StyleIcon from '../../svgs/style.svg'\nimport AdvancedIcon from '../../svgs/advanced.svg'\nimport {TAB_ADVANCED, TAB_CONTENT, TAB_STYLE} from \"../classes/modules/ControllersManager\";\nimport PanelTabContent from \"./PanelTabContent\";\n\nclass SettingsPanel extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      activeTab: 'content',\n    };\n  }\n\n  setActiveTab(activeTab){\n    this.setState({\n        ...this.state, activeTab\n    })\n  }\n\n  render() {\n\n    let controllersManager = window.controllersManager;\n\n    let sections = [];\n    if(this.props.currentElement.getName){\n      sections = controllersManager.getControls(this.props.currentElement.getName())[this.state.activeTab] || [];\n    }\n\n    // let sections = this.props.currentElement.getControllers ?\n    let contentTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_CONTENT ? 'active' : '');\n    let styleTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_STYLE ? 'active' : '');\n    let advancedTabClasses = 'panel-tab d-flex ' + (this.state.activeTab === TAB_ADVANCED ? 'active' : '');\n    return <div className=\"panel settings-panel d-flex\">\n      <div className=\"panel-tabs d-flex\">\n        <button className={contentTabClasses} onClick={()=>this.setActiveTab(TAB_CONTENT)}>\n          <span className=\"panel-tab__icon\">\n            <ContentIcon/>\n          </span>\n          <span className=\"panel-tab__text\">\n            Content\n          </span>\n        </button>\n        <button className={styleTabClasses} onClick={()=>this.setActiveTab(TAB_STYLE)}>\n          <span className=\"panel-tab__icon\">\n            <StyleIcon/>\n          </span>\n          <span className=\"panel-tab__text\">\n            Style\n          </span>\n        </button>\n        <button className={advancedTabClasses} onClick={()=>this.setActiveTab(TAB_ADVANCED)}>\n          <span className=\"panel-tab__icon\">\n            <AdvancedIcon/>\n          </span>\n          <span className=\"panel-tab__text\">\n            Advanced\n          </span>\n        </button>\n      </div>\n      <PanelTabContent sections={sections}/>\n    </div>\n  }\n}\nfunction mapStateToProps(state) {\n  return{\n    currentElement:state.currentElement.currentElement\n  };\n}\nexport default connect(mapStateToProps)(SettingsPanel);","import React, {Component} from \"react\";\n\n\nclass EditorWindow extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n\n    return  <div className=\"editor-window\">\n\n      {/*<Frame>*/}\n        {/*<FrameBindingContext>*/}\n          {/*<DropTarget/>*/}\n        {/*</FrameBindingContext>*/}\n      {/*</Frame>*/}\n      {/*<Frame src=\"/admin/editor-content\" >*/}\n        {/*<FrameBindingContext/>*/}\n      {/*</Frame>*/}\n      {/*<FrameContextConsumer>*/}\n      <iframe src=\"/admin/editor-content\" />\n      {/*</FrameContextConsumer>*/}\n    </div>\n  }\n}\n\nexport default EditorWindow","import Chevron from '../../svgs/chevron.svg';\nimport React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {CONSTANTS, getEditor} from \"../helpers\";\n\nclass UpdateButton extends Component {\n  constructor(props){\n    super(props);\n    this.saveTemplate = this.saveTemplate.bind(this);\n  }\n  saveTemplate(e){\n    getEditor().modules.saveImportModule.saveTemplate();\n  }\n render(){\n   let buttonClasses = 'btn font_montserrat font_500 btn_grey';\n   switch (this.props.templateStatus) {\n     case CONSTANTS.TEMPLATE_UPDATED:{\n       buttonClasses += ' btn_disabled ';\n     }\n     break;\n     case CONSTANTS.TEMPLATE_NEED_UPDATE:{\n       buttonClasses += ' btn_active ';\n     }\n     break;\n   }\n   return  <div className=\"control-group d-flex\">\n     <button className={buttonClasses} onClick={this.saveTemplate}>\n       UPDATE\n     </button>\n     <button className=\"btn btn_grey\">\n       <Chevron className=\"icon\"/>\n     </button>\n   </div>\n }\n}\n\nfunction mapStateToProps(state) {\n  return{\n    templateStatus: state.templateStatus.status,\n  };\n}\nexport default connect(mapStateToProps)(UpdateButton)","import React, {Component} from \"react\";\n\nclass HistoryPanel extends Component {\n\n  render() {\n    return <div className=\"history-panel\">\n      HistoryPanel\n    </div>\n  }\n}\n\nexport default HistoryPanel","// import React, {Component} from \"react\";\nimport { connect } from \"react-redux\";\nimport Times from \"../../../svgs/times.svg\";\nimport { assetsToggle } from \"../../store/assets-browser/actions\";\nimport { iconsManager } from \"../../helpers\";\nimport Resource from \"../Resource\";\nclass AssetsBrowser extends Component {\n  constructor() {\n    super();\n    this.tabClick = this.tabClick.bind(this);\n    this.toggleBrowser = this.toggleBrowser.bind(this);\n    this.selectAsset = this.selectAsset.bind(this);\n    this.chooseAsset = this.chooseAsset.bind(this);\n    this.state = {\n      // activeTab: 'icons',\n      activeTab: \"media\",\n      tabs: [\n        // {\n        //   name: 'upload',\n        //   title: 'Upload Media File',\n        // },\n        {\n          name: \"icons\",\n          title: \"Icons Library\"\n        },\n        {\n          name: \"media\",\n          title: \"Media Library\"\n        }\n      ],\n      assets: this.getAssets(\"media\"),\n      // assets: this.getAssets('icons'),\n      selectedAsset: null,\n      mediaAssets: []\n    };\n    this.mediaResource = new Resource({ route: \"/admin/ajax/media\" });\n  }\n  async componentDidMount() {\n    try {\n      let res = await this.mediaResource.getAll();\n\n      this.setState(state => {\n        state = { ...state, mediaAssets: res };\n        if (state.activeTab === \"media\") {\n          state.assets = res;\n        }\n        return state;\n      });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  }\n  getAssets(tab) {\n    if (!tab) {\n      tab = this.state.activeTab;\n    }\n\n    switch (tab) {\n      case \"icons\": {\n        return iconsManager().getIconsList();\n      }\n      case \"media\": {\n        return this.state ? this.state.mediaAssets : [];\n      }\n    }\n    return [];\n  }\n\n  selectAsset(e) {\n    let selectedAsset = e.currentTarget.dataset.assetname;\n    this.setState(state => {\n      return { ...state, selectedAsset };\n    });\n  }\n\n  tabClick(e) {\n    this.setActiveTab(e.target.dataset.tab);\n  }\n\n  setActiveTab(tab) {\n    this.setState(state => {\n      return { ...state, activeTab: tab, assets: this.getAssets(tab) };\n    });\n  }\n\n  toggleBrowser() {\n    this.setState(state => {\n      return { ...state, selectedAsset: null };\n    });\n    this.props.dispatch(assetsToggle());\n  }\n\n  chooseAsset() {\n    let asset;\n    this.state.assets.forEach(item => {\n      if (item.name === this.state.selectedAsset) {\n        asset = item;\n      }\n    });\n    if (!asset) {\n      throw `Asset with name ${this.state.selectedAsset} not found in Assets Browser (${this.state.activeTab})!`;\n    }\n    this.props.onChoose(asset);\n    this.setState(state => {\n      return { ...state, selectedAsset: null };\n    });\n    this.props.dispatch(assetsToggle());\n  }\n\n  render() {\n    let classes = \"assets-browser\";\n    if (this.props.active) {\n      classes += \" assets-browser_active\";\n    }\n    let buttonClasses = \"btn btn_success\";\n    if (!this.state.selectedAsset) {\n      buttonClasses += \" btn_disabled\";\n    }\n    return (\n      <div className={classes}>\n        <div className=\"assets-browser__bg\" onClick={this.toggleBrowser} />\n        <div className=\"assets-browser-content\">\n          <div className=\"assets-browser-top\">\n            <div className=\"caption\">Append Media</div>\n            <button className=\"btn btn_bare assets-browser__close\">\n              <Times className=\"icon\" onClick={this.toggleBrowser} />\n            </button>\n            <div className=\"assets-browser-nav\">\n              {this.state.tabs.map(tab => {\n                let tabClasses = \"assets-browser__tab\";\n                if (this.state.activeTab === tab.name) {\n                  tabClasses += \" assets-browser__tab_active\";\n                }\n                return (\n                  <button\n                    className={tabClasses}\n                    onClick={this.tabClick}\n                    key={tab.name}\n                    data-tab={tab.name}\n                  >\n                    {tab.title}\n                  </button>\n                );\n              })}\n            </div>\n          </div>\n          {this.state.assets.length ? (\n            <div className=\"assets-browser-choose-frame\">\n              {this.state.assets.map(asset => {\n                let AssetContent;\n                let classes = \"asset-choose\";\n                let assetProps = {\n                  className: \"asset-choose__content\"\n                };\n                if (this.state.activeTab === \"icons\") {\n                  AssetContent = asset.iconComponent;\n                  classes += \" asset-choose_icon\";\n                  // assetProps.viewBox = '0 0 20 20';\n                  // assetProps.viewport = '0 0 10 10';\n                  assetProps.width = \"20\";\n                  assetProps.height = \"20\";\n                }\n                if (this.state.activeTab === \"media\") {\n                  AssetContent = \"img\";\n                  assetProps.src = asset.url;\n                  classes += \" asset-choose_media\";\n                  asset.name = asset.filename;\n                  asset.assetType = \"media\";\n                }\n                if (this.state.selectedAsset === asset.name) {\n                  classes += \" asset-choose_selected\";\n                }\n                return (\n                  <div\n                    className={classes}\n                    data-assetname={asset.name}\n                    key={asset.name}\n                    onClick={this.selectAsset}\n                  >\n                    <AssetContent {...assetProps} />\n                  </div>\n                );\n              })}\n            </div>\n          ) : (\n            \"\"\n          )}\n          <div className=\"assets-browser-bottom\">\n            <button className={buttonClasses} onClick={this.chooseAsset}>\n              Choose\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    ...state.assetsManagerSettings\n  };\n}\n\nexport default connect(mapStateToProps)(AssetsBrowser);\n","import React, { Component } from \"react\";\nimport { hot } from \"react-hot-loader\";\nimport { Provider } from \"react-redux\";\n\nimport Modules from \"./js/classes/Modules\";\nimport WidgetsPanel from \"./js/components/WidgetsPanel\";\nimport SettingsPanel from \"./js/components/SettingsPanel\";\nimport EditorWindow from \"./js/components/EditorWindow\";\nimport HistoryPanel from \"./js/components/HistoryPanel\";\nimport UpdateButton from \"./js/components/UpdateButton\";\nimport { CONSTANTS } from \"./js/helpers\";\nimport { stopDrag } from \"./js/store/element-drag/actions\";\nimport AssetsBrowser from \"./js/classes/modules/AssetsBrowser\";\n\nimport store from \"../src/js/store/store\";\n\nimport \"./sass/editor-style.scss\";\n\nimport DesktopIcon from \"./svgs/desktop.svg\";\nimport Logo from \"./svgs/logo.svg\";\nimport Navigation from \"./svgs/navigation.svg\";\nimport History from \"./svgs/history.svg\";\nimport Preview from \"./svgs/preview.svg\";\nimport Settings from \"./svgs/settings.svg\";\nimport Dots from \"./svgs/dots.svg\";\nimport Hamburger from \"./svgs/hamburger.svg\";\n/**\n * Главный класс редактора.<br/>\n * Реакт-Компонент.<br/>\n * Синглтон, который хранится в глобальной переменной altrpEditor.\n *\n * */\nclass Editor extends Component {\n  /**\n   * @constructor\n   * */\n  constructor(props) {\n    super(props);\n    window.altrpEditor = this;\n    this.state = {\n      activePanel: 'widgets',\n      // activePanel: \"settings\",\n      templateStatus: CONSTANTS.TEMPLATE_UPDATED,\n    };\n    this.openPageSettings = this.openPageSettings.bind(this);\n    this.showSettingsPanel = this.showSettingsPanel.bind(this);\n    this.showWidgetsPanel = this.showWidgetsPanel.bind(this);\n    this.onDragEnd = this.onDragEnd.bind(this);\n    store.subscribe(this.templateStatus.bind(this));\n  }\n  /**\n   * Метод подписчик на изменение состояния Редактора из Редакс хранилища\n   * */\n  templateStatus() {\n    let templateStatus = store.getState().templateStatus.status;\n    if (templateStatus !== this.state.templateStatus) {\n      this.setState({ ...this.state, templateStatus });\n    }\n  }\n\n  /**\n   * Инициализация модулей\n   */\n\n  initModules() {\n    this.modules = new Modules(this);\n    this.modules.loaded();\n  }\n\n  /**\n   * Показывает панель со списком виджетов\n   */\n  showWidgetsPanel() {\n    this.setState({\n      ...this.state,\n      activePanel: \"widgets\",\n    });\n  }\n\n  /**\n   * Показывает панель с настройками текущего виджета\n   */\n  showSettingsPanel() {\n    this.setState({\n      ...this.state,\n      activePanel: \"settings\",\n    });\n  }\n\n  /**\n   * Обработчик события конец переноса вызывает метод stopDrag переносимого элемента\n   * @see ElementWrapper.stopDrag\n   */\n  onDragEnd() {\n    let draggableElement = store.getState().elementDrag.element;\n    if (draggableElement && draggableElement.stopDrag) {\n      draggableElement.stopDrag();\n    }\n    store.dispatch(stopDrag());\n  }\n  /**\n   * Вызывается после загрузки шаблона\n   * @see {@link SaveImportModule}\n   * */\n  endLoading() {\n    console.log(\"editor loaded\");\n  }\n\n  /**\n   * Вызывается после загрузки компонента\n   * @see {@link https://ru.reactjs.org/docs/react-component.html#componentdidmount}\n   * */\n  componentDidMount() {\n    this.initModules();\n  }\n\n  /**\n   * Выбирает корневой элемент текущим и открывает панель настроек\n   */\n\n  openPageSettings() {\n    this.modules.templateDataStorage.setCurrentRootElement();\n    this.showSettingsPanel();\n  }\n\n  /**\n   * Отрисовка Компонента\n   */\n  render() {\n    let settingsActive = \"\";\n    let templateClasses = \"editor \";\n    if (this.state.templateStatus === CONSTANTS.TEMPLATE_SAVING) {\n      templateClasses += \" editor_saving\";\n    }\n    if (\n      store.getState().currentElement.currentElement.getType &&\n      store.getState().currentElement.currentElement.getType() ===\n        \"root-element\" &&\n      this.state.activePanel === \"settings\"\n    ) {\n      settingsActive = \" active\";\n    }\n\n    return (\n      <Provider store={store}>\n        <div className={templateClasses} onDragEnd={this.onDragEnd}>\n          <div className=\"left-panel\">\n            <div className=\"editor-top-panel\">\n              <button\n                className=\"btn btn_hamburger\"\n                // onClick={this.showSettingsPanel}\n              >\n                <Hamburger className=\"icon\" />\n              </button>\n              <div className=\"logo\">\n                <Logo viewBox=\"0 0 97 35\" />\n              </div>\n              <button className=\"btn btn_dots\" onClick={this.showWidgetsPanel}>\n                <Dots className=\"icon\" />\n              </button>\n            </div>\n            <div className=\"left-panel-main\">\n              {this.state.activePanel === \"widgets\" && <WidgetsPanel />}\n              {this.state.activePanel === \"settings\" && <SettingsPanel />}\n            </div>\n            <div className=\"editor-bottom-panel d-flex align-content-center justify-center\">\n              <button\n                className={\"btn btn_settings\" + settingsActive}\n                onClick={this.openPageSettings}\n              >\n                <Settings className=\"icon\" />\n              </button>\n              <button className=\"btn \">\n                <Navigation className=\"icon\" />\n              </button>\n              <button className=\"btn \">\n                <History className=\"icon\" />\n              </button>\n              <button className=\"btn \">\n                <DesktopIcon className=\"icon\" />\n              </button>\n              <button className=\"btn \">\n                <Preview className=\"icon\" />\n              </button>\n              <UpdateButton />\n            </div>\n          </div>\n          <div className=\"right-panel\">\n            <EditorWindow />\n          </div>\n        </div>\n        <AssetsBrowser />\n      </Provider>\n    );\n  }\n}\n\n/**\n * Если разработка то включается HMR <br/>\n * По умолчанию просто компонент\n * @member _export\n */\nlet _export;\nif (process.env.NODE_ENV === \"production\") {\n  _export = Editor;\n} else {\n  _export = hot(module)(Editor);\n}\n\nexport default _export;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"17\" height=\"15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M15 0H1.364C.612 0 0 .612 0 1.364v9.545c0 .752.612 1.364 1.364 1.364h4.774c-.014.544-.118 1.414-.508 1.824a.67.67 0 01-.516.221.34.34 0 100 .682h6.136a.34.34 0 100-.682.668.668 0 01-.515-.22c-.39-.409-.494-1.28-.509-1.825H15c.752 0 1.364-.612 1.364-1.364V1.364C16.364.612 15.752 0 15 0zM8.182 11.593a.685.685 0 010-1.368.685.685 0 010 1.368zM1.364 9.545V1.364H15v8.181H1.365z\" fill=\"#8E94AA\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"97\" height=\"35\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M20.245 8.309l-3.747 9.57c0 2.31.476 4.088 1.443 5.31.318.41.808.796 1.483 1.154l-1.086 3.398c-.966-.358-1.8-.982-2.516-1.885a11.593 11.593 0 01-1.257-2.057c-.848 1.42-1.801 2.402-2.887 2.92-.82.411-1.827.61-3.032.61-2.423 0-4.449-.862-6.05-2.601C.86 22.883 0 20.388 0 17.228c0-1.101.066-2.097.199-2.96.132-.862.37-1.685.701-2.455.702-1.566 1.642-2.76 2.847-3.584 1.205-.823 2.595-1.234 4.184-1.234 1.47 0 2.74.292 3.813.863 1.51.796 2.622 2.097 3.31 3.902l2.212-4.858 2.979 1.407zm-7.163 9.53c.026-.093.04-.252.04-.464v-.293a.602.602 0 00-.04-.212c0-1.686-.477-3.185-1.417-4.5-.953-1.313-2-1.964-3.151-1.964-1.364 0-2.476.584-3.31 1.765-.914 1.275-1.364 3.053-1.364 5.35 0 2.097.463 3.703 1.403 4.804.834.983 1.894 1.487 3.165 1.487.887 0 1.615-.265 2.158-.796.9-.903 1.748-2.615 2.516-5.177zM38.874 27.05h-3.92l-4.077-11.162-.967-3.066-1.006 3.146-3.959 11.083h-4.184l7.203-19.14a72.897 72.897 0 01-.755-2.018c-.172-.451-.304-.756-.397-.902-.503-.797-1.31-1.195-2.41-1.195-.384 0-1.125.12-2.237.358l.437-3.69a13.272 13.272 0 011.35-.358A5.454 5.454 0 0124.985 0c2.065 0 3.68 1.075 4.833 3.212.437.743 1.032 2.177 1.8 4.3l7.256 19.539zM55.054 10.804h-5.587v10.579c0 .77.026 1.261.066 1.487.053.212.185.411.437.584.238.12.556.185.94.185.291 0 .847-.066 1.695-.185l.582 3.504c-.437.093-1.033.186-1.8.252-.769.066-1.298.106-1.59.106-1.204 0-2.144-.186-2.833-.557-.688-.372-1.178-.916-1.496-1.646-.146-.359-.252-.836-.318-1.447-.066-.597-.106-1.42-.106-2.456V10.804l-2.595-.04c-.556 0-1.072.253-1.55.757-.145.173-.33.438-.582.796l-2.515-2.561c.476-.65.887-1.128 1.231-1.447 1.06-.969 2.198-1.447 3.43-1.447l12.604.04v3.902h-.013zM73.578 11.56c.648 1.567.966 3.372.966 5.416 0 2.124-.344 3.956-1.046 5.495-.702 1.54-1.721 2.761-3.059 3.65-1.35.89-2.793 1.341-4.356 1.341-.94 0-1.681-.093-2.237-.292-.768-.265-1.55-.783-2.344-1.553v9.026h-4.356l.04-18.53c0-3.73 1.258-6.41 3.786-8.016 1.563-.983 3.337-1.487 5.336-1.487 1.655 0 3.112.425 4.383 1.288 1.245.849 2.211 2.07 2.886 3.663zm-4.357-.079c-.9-1.101-1.972-1.659-3.244-1.659-1.244 0-2.356.584-3.31 1.765-.45.585-.807 1.394-1.059 2.443a14.626 14.626 0 00-.384 3.41c0 2.31.45 4.01 1.364 5.098.913 1.088 2 1.62 3.244 1.62 1.297 0 2.41-.558 3.35-1.66.45-.584.807-1.354 1.059-2.35.251-.982.384-2.07.384-3.251 0-1.182-.12-2.23-.344-3.146-.226-.903-.583-1.66-1.06-2.27zM97 10.725l-2.158-.04-.04 16.366h-4.078V10.698h-6.7v16.366h-3.998V10.738c-.239 0-.53.093-.887.265-.345.186-.755.505-1.205.956l-2.662-2.668c.98-.969 1.854-1.593 2.596-1.898.74-.305 1.588-.451 2.515-.451H97v3.783z\" fill=\"#fff\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"15\" height=\"15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M14.437 4.1L7.218 0 0 4.1l7.218 4.124 7.219-4.125z\" fill=\"#fff\" /><path d=\"M7.218 8.933l-4.867-2.78L0 7.487l7.218 4.124 7.219-4.124-2.351-1.336-4.868 2.781z\" fill=\"#fff\" /><path d=\"M7.218 12.322L2.351 9.54 0 10.876 7.218 15l7.219-4.124-2.351-1.335-4.868 2.78z\" fill=\"#fff\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"17\" height=\"10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M8.388 0C5.183 0 2.276 1.754.131 4.602a.664.664 0 000 .793C2.276 8.246 5.183 10 8.388 10s6.112-1.754 8.257-4.602a.664.664 0 000-.793C14.5 1.754 11.593 0 8.388 0zm.23 8.52a3.53 3.53 0 01-3.751-3.75 3.536 3.536 0 013.291-3.29 3.53 3.53 0 013.75 3.75 3.548 3.548 0 01-3.29 3.29zM8.51 6.895a1.897 1.897 0 01-2.017-2.018 1.908 1.908 0 011.774-1.774 1.897 1.897 0 012.018 2.018 1.908 1.908 0 01-1.774 1.774z\" fill=\"#8E94AA\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"13\" height=\"13\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path fill=\"#fff\" d=\"M0 10h3v3H0zM5 10h3v3H5zM10 10h3v3h-3zM0 0h3v3H0zM5 0h3v3H5zM10 0h3v3h-3zM0 5h3v3H0zM5 5h3v3H5zM10 5h3v3h-3z\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"19\" height=\"14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path fill=\"#fff\" d=\"M0 0h19v2H0zM0 6h19v2H0V6zM0 12h19v2H0z\" /></svg>);"],"sourceRoot":""}